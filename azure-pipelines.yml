trigger:
  branches:
    include:
      - main
      - development
  paths:
    exclude:
      - README.md
      - docs/*

pool:
  name: 'Default'
  vmImage: 'ubuntu-latest'

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isDev: $[eq(variables['Build.SourceBranch'], 'refs/heads/development')]

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: BuildAndTest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g pnpm
        pnpm install
      displayName: 'Install Dependencies'

    - script: |
        pnpm lint
      displayName: 'Run Linting'
      continueOnError: true

    - script: |
        pnpm test:ci
      displayName: 'Run Tests'
    
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/junit.xml'
        mergeTestResults: true
        testRunTitle: 'Unit Tests'
      displayName: 'Publish Test Results'
      condition: succeededOrFailed()

    - script: |
        pnpm build
      displayName: 'Build Application'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '.next'
        ArtifactName: 'next-build'
        publishLocation: 'Container'
      displayName: 'Publish Next.js Build'

- stage: Deploy_Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isDev, true))
  jobs:
  - deployment: DeployDev
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: 'next-build'
            displayName: 'Download Build Artifacts'
          
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure Development'
              appType: 'webAppLinux'
              appName: 'transport-system-dev'
              package: '$(Pipeline.Workspace)/next-build'
              startUpCommand: 'pnpm start'
            displayName: 'Deploy to Azure Web App Development'

- stage: Deploy_Production
  displayName: 'Deploy to Production'
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isMain, true))
  jobs:
  - deployment: DeployProd
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: 'next-build'
            displayName: 'Download Build Artifacts'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure Production'
              appType: 'webAppLinux'
              appName: 'transport-system'
              package: '$(Pipeline.Workspace)/next-build'
              startUpCommand: 'pnpm start'
            displayName: 'Deploy to Azure Web App Production' 